<Window x:Class="PhotoMover.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:PhotoMover" mc:Ignorable="d" Title="{Binding Title, FallbackValue='Photo Mover'}" Height="450" Width="800" TextOptions.TextFormattingMode="Display" UseLayoutRounding="True" ResizeMode="CanResizeWithGrip" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Closed="Window_Closed" ContentRendered="Window_ContentRendered" Initialized="Window_Initialized">

	<Window.Resources>

		<ContextMenu x:Key="ContextMenuFileItem">
			<MenuItem Header="Open Source Folder" Command="local:Commands.OpenSourceFolder" />
			<MenuItem Header="Open Destination Folder" Command="local:Commands.OpenDestinationFolder" />
		</ContextMenu>

		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
		<local:InverseBooleanConverter x:Key="InverseBooleanConverter" />

	</Window.Resources>

	<Window.CommandBindings>
		<CommandBinding Command="local:Commands.CancelWork" Executed="CommandCancelWork_Executed" />
	</Window.CommandBindings>
	<Grid>

		<Grid IsEnabled="{Binding Path=GuiFrozen, Converter={StaticResource InverseBooleanConverter}}">
			<Grid.CommandBindings>
				<CommandBinding Command="local:Commands.Exit" Executed="CommandExit_Executed" />
				<CommandBinding Command="local:Commands.About" Executed="CommandAbout_Executed" />
				<CommandBinding Command="local:Commands.OpenSourceFolder" Executed="CommandOpenSourceFolder_Executed" CanExecute="CommandOpenSourceFolder_CanExecute" />
				<CommandBinding Command="local:Commands.OpenDestinationFolder" Executed="CommandOpenDestinationFolder_Executed" CanExecute="CommandOpenDestinationFolder_CanExecute" />
			</Grid.CommandBindings>

			<Grid.RowDefinitions>
				<RowDefinition Height="auto" />
				<RowDefinition Height="auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="auto" />
			</Grid.RowDefinitions>

			<!--Menu-->
			<Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
				<Grid x:Name="GridMenu">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<Menu Grid.Row="0" Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}" VerticalAlignment="Center" Margin="2">
						<MenuItem Header="File">
							<MenuItem Header="Exit" Command="local:Commands.Exit" />
						</MenuItem>
						<MenuItem Header="Help">
							<MenuItem Header="About" Command="local:Commands.About" />
						</MenuItem>
					</Menu>
				</Grid>
			</Border>

			<!--Input-->
			<Grid Name="GridMainContent" Grid.Row="1" Margin="5">
				<Grid.RowDefinitions>
					<RowDefinition Height="auto" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Label Grid.Row="0" Grid.Column="0" Content="Import Folder:" Style="{StaticResource CommonTextLabel}" />
				<Border Grid.Column="1" Margin="5" BorderThickness="1" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" AllowDrop="True">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<TextBox Grid.Column="0" Text="{Binding ImportPath}" Padding="2" BorderThickness="0" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" />
						<Button Grid.Column="1" Name="ButtonBrowseImportFolder" Content="..." Width="20" BorderThickness="0" Click="ButtonBrowseImportFolder_Click" />
					</Grid>
				</Border>

				<Label Grid.Row="1" Grid.Column="0" Content="Import Configuration:" Style="{StaticResource CommonTextLabel}" />
				<Border Grid.Column="1" Grid.Row="1" Margin="5" BorderThickness="1" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" AllowDrop="True">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<TextBox Grid.Column="0" Text="{Binding ImportConfigurationsLabel, Mode=OneTime}" Padding="2" BorderThickness="0" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" IsEnabled="False" />
						<Button Grid.Column="1" Name="ButtonEditConfiguration" Content="..." Width="20" BorderThickness="0" Click="ButtonEditConfiguration_Click" />
					</Grid>
				</Border>

			</Grid>

			<!--Result-->
			<Grid Grid.Row="2" Margin="5">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<StackPanel Grid.Column="1" Orientation="Horizontal">
					<Button x:Name="ButtonFindFiles" Content="Find Files" Style="{StaticResource CommonButton}" Click="ButtonFindFiles_Click" />
					<Button x:Name="ButtonCopy" Content="Copy" Style="{StaticResource CommonButton}" Click="ButtonCopy_Click" />
				</StackPanel>

				<DataGrid x:Name="DataGridImportFiles" Grid.Row="1" Grid.ColumnSpan="3" Margin="5" ItemsSource="{Binding ImportFiles}" CellStyle="{StaticResource FileListCell}" ContextMenu="{StaticResource ContextMenuFileItem}" VirtualizingPanel.IsVirtualizing="True" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey}}" Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}" SelectionMode="Single" SelectionUnit="FullRow" AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True" HeadersVisibility="Column" CanUserReorderColumns="False">
					<DataGrid.Columns>
						<DataGridCheckBoxColumn Binding="{Binding Selected, UpdateSourceTrigger=PropertyChanged}" CanUserResize="False" CellStyle="{StaticResource CheckBoxColumn}" />
						<DataGridTextColumn Binding="{Binding SourcePath}" Header="Source File" />
						<DataGridTextColumn Binding="{Binding DestinationPath}" Header="Import Destination" />
						<DataGridTextColumn Binding="{Binding Status}" Header="Status" />
					</DataGrid.Columns>
				</DataGrid>
			</Grid>

		</Grid>

		<!--Progress Panel-->
		<Grid Background="#00000000" Visibility="{Binding GuiFrozen, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue='Hidden'}" Cursor="Wait">
			<!-- Workaround to not fuckup the cleartype rendering -->
			<Border Width="{Binding ActualWidth, ElementName=ProgressPanel}" Height="{Binding ActualHeight, ElementName=ProgressPanel}" Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}" HorizontalAlignment="Center" VerticalAlignment="Center">
				<Border.Effect>
					<DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity=".3" />
				</Border.Effect>
			</Border>
			<Border x:Name="ProgressPanel" BorderThickness="1" BorderBrush="{x:Static SystemColors.ScrollBarBrush}" Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Arrow">
				<StackPanel Margin="5">
					<Label Name="ProgressLabel" Content="Working..." HorizontalAlignment="Center" Style="{StaticResource CommonTextLabel}" />
					<StackPanel Orientation="Horizontal">
						<ProgressBar x:Name="ProgressBarWork" Value="40" Width="300" Margin="5" BorderBrush="{x:Static SystemColors.ControlDarkBrush}" />
						<Button x:Name="ButtonCancelWork" Content="Cancel" Command="local:Commands.CancelWork" Style="{StaticResource CommonButton}" HorizontalAlignment="Right" />
					</StackPanel>
				</StackPanel>
			</Border>
		</Grid>

	</Grid>
</Window>
